{# Ovewrites: https://github.com/jupyter/nbconvert/blob/master/share/jupyter/nbconvert/templates/lab/index.html.j2 #}

{%- extends "lab/index.html.j2" -%}

{# CHANGE: Overwrite the header because lab/index.html outputs a complete HTML page #}
{# We want just the notebook content not a full html page #}
{%- block header -%}

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

{%- block html_head -%}
{% set nb_title = nb.metadata.get('title', resources['metadata']['name']) | escape_html_keep_quotes %}
<title>{{nb_title}}</title>

{%- block html_head_js -%}
{# CHANGE:
1. Remove Require.JS (incompatible with the clipboard-copy)
#}
{%- block html_head_js_requirejs -%}
{# <script src="{{ resources.require_js_url }}"></script> #}
{%- endblock html_head_js_requirejs -%}
{%- endblock html_head_js -%}

{% block jupyter_widgets %}
  {%- if "widgets" in nb.metadata -%}
    {{ jupyter_widgets(resources.jupyter_widgets_base_url, resources.html_manager_semver_range, resources.widget_renderer_url) }}
  {%- endif -%}
{% endblock jupyter_widgets %}

{% block extra_css %}

{% endblock extra_css %}


{% block notebook_css %}
{{ resources.include_css("static/index.css") }}
{% if resources.theme == 'dark' %}
    {{ resources.include_css("static/theme-dark.css") }}
{% elif resources.theme == 'light'  %}
    {{ resources.include_css("static/theme-light.css") }}
{% else %}
    {{ resources.include_lab_theme(resources.theme) }}
{% endif %}

<style type="text/css">

.jupyter-body {
    width: 60%;
    margin-left:auto;
    margin-right:auto;
    display: inline_block;
}

.clipboard-copy-txt {
    display: none !important;
}

 .code-output-block > .copyButton {
    position: absolute;
    top: auto;
    right: 0;
    margin-right:10px;
    padding-top:10px;
    padding-right:10px;
    z-index: auto;
}

.highlight-ipynb {
    padding: 0.1px;
    background: #f5f5f5 !important; 
    border-radius: 10px;
}

.highlight-ipynb > pre{
    margin-left: 1px;
    padding-left: 10px
}


/* Force rendering true colors when outputing to pdf */
* {
  -webkit-print-color-adjust: exact;
}
/* Misc */
a.anchor-link {
  display: none;
}
/* Input area styling */
.jp-InputArea {
  overflow: hidden;
}
.jp-InputArea-editor {
  overflow: hidden;
}

/* @michael we do not need this part*/
.CodeMirror.cm-s-jupyter .highlight pre {
/* weird, but --jp-code-padding defined to be 5px but 4px horizontal padding is hardcoded for pre.CodeMirror-line */
  padding: var(--jp-code-padding) 4px;
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  color: inherit;
}
.jp-OutputArea-output pre {
  line-height: inherit;
  font-family: inherit;
}
.jp-RenderedText pre {
  color: var(--jp-content-font-color1);
  font-size: var(--jp-code-font-size);
}
/* Using table instead of flexbox so that we can use break-inside property */
/* CSS rules under this comment should not be required anymore after we move to the JupyterLab 4.0 CSS */
.jp-CodeCell.jp-mod-outputsScrolled .jp-OutputArea-prompt {
  min-width: calc(
    var(--jp-cell-prompt-width) - var(--jp-private-cell-scrolling-output-offset)
  );
}
.jp-OutputArea-child {
  display: table;
  width: 100%;
}
.jp-OutputPrompt {
  display: table-cell;
  vertical-align: top;
  min-width: var(--jp-cell-prompt-width);
}
body[data-format='mobile'] .jp-OutputPrompt {
  display: table-row;
}
.jp-OutputArea-output {
  display: table-cell;
  width: 100%;
}
body[data-format='mobile'] .jp-OutputArea-child .jp-OutputArea-output {
  display: table-row;
}
.jp-OutputArea-output.jp-OutputArea-executeResult {
  width: 100%;
}
/* Hiding the collapser by default */
.jp-Collapser {
  display: none;
}
@page {
    margin: 0.5in; /* Margin for each printed piece of paper */
}
@media print {
  .jp-Cell-inputWrapper,
  .jp-Cell-outputWrapper {
    display: block;
  }
  .jp-OutputArea-child {
    break-inside: avoid-page;
  }
}
</style>

{% endblock notebook_css %}


{% block mathjax %}
    <!-- MathJax configuration -->
    {{ resources.include_js("html/assets/MathJax.js") }}
    <!-- End of mathjax configuration -->
{% endblock mathjax%}


{%- block html_head_css -%}
{% for css in resources.inlining.css -%}
  <style type="text/css">
    {# CHANGE: replace CSS classes: .highlight -> .highlight-ipynb #}
    {{ css | replace(".highlight ", ".highlight-ipynb " ) }}
  </style>
{% endfor %}
{%- endblock html_head_css -%}

{%- endblock html_head -%}
</head>
{%- endblock header -%}


{# CHANGE: Overwrite body header and footer to include a .jupyter-wrapper div wrapper #}
{%- block body_header -%}
<div class="jupyter-wrapper">
{%- endblock body_header -%}



{% block input_group %}
    <div class="code-output-block" data-type="inline">
        <div role ='button', class="copyButton">
            <div>
                <span class="noticeCopy" hidden>Copied!</span>
                <svg aria-hidden="true" width="20" height="20" viewBox="0 0 16 16" version="1.1"  data-view-component="true" class="clipboard-copy-icon">
                    <path fill="currentColor" fill-rule="evenodd" d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z"></path>
                    <path fill="currentColor" fill-rule="evenodd" d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z"></path>
                </svg>
            </div>
        </div>
        {{ cell.source | highlight_code(metadata=cell.metadata) }}
    </div>
{% endblock input_group %}


{% block output %}
<div class="output_area">
{{ super() }}
</div>
{% endblock output %}



{# CHANGE: Overwrite the footer because lab template outputs a complete HTML page #}
{% block footer %}
{{ resources.include_js("html/assets/copy_code.js") }}
{{ resources.include_js("html/assets/custom.js") }}
</html>
{% endblock footer %}